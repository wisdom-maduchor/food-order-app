{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\Code-world\\\\React\\\\food-order-app\\\\src\\\\components\\\\Meals\\\\AvailableMeal.js\",\n  _s = $RefreshSig$();\nimport classes from \"./AvailableMeal.module.css\";\nimport MealItem from \"./MealItem/MealItem\";\nimport Card from \"../UI/Card\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_MEALS = [{\n  id: 'm1',\n  name: 'Sushi',\n  description: 'Finest fish and veggies',\n  price: 22.99\n}, {\n  id: 'm2',\n  name: 'Schnitzel',\n  description: 'A german specialty!',\n  price: 16.5\n}, {\n  id: 'm3',\n  name: 'Barbecue Burger',\n  description: 'American, raw, meaty',\n  price: 12.99\n}, {\n  id: 'm4',\n  name: 'Green Bowl',\n  description: 'Healthy...and green...',\n  price: 18.99\n}];\nconst AvailableMeal = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [food, setFood] = useState([]);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchMeal = async () => {\n      const response = await fetch('https://foodapp-583ea-default-rtdb.firebaseio.com/meals');\n      if (!response.ok) {\n        throw new Error('something went wrong');\n      }\n      ;\n      const data = await response.json();\n      const loadMeal = [];\n      for (const key in data) {\n        loadMeal.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price\n        });\n      }\n      setFood(loadMeal);\n      setIsLoading(false);\n    };\n    try {\n      fetchMeal();\n    } catch (error) {\n      setIsLoading(false);\n      setHttpError(error.message);\n    }\n    ;\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.loading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 16\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.mealError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Error Detected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 16\n    }, this);\n  }\n  const mealsList = food.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n_s(AvailableMeal, \"7U0VgtAhvJQhLszuPG/9u9IFdmY=\");\n_c = AvailableMeal;\nexport default AvailableMeal;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeal\");","map":{"version":3,"names":["classes","MealItem","Card","useEffect","useState","jsxDEV","_jsxDEV","DUMMY_MEALS","id","name","description","price","AvailableMeal","_s","isLoading","setIsLoading","food","setFood","httpError","setHttpError","fetchMeal","response","fetch","ok","Error","data","json","loadMeal","key","push","error","message","className","loading","children","fileName","_jsxFileName","lineNumber","columnNumber","mealError","mealsList","map","meal","meals","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/Code-world/React/food-order-app/src/components/Meals/AvailableMeal.js"],"sourcesContent":["import classes from \"./AvailableMeal.module.css\"\r\nimport MealItem from \"./MealItem/MealItem\"\r\nimport Card from \"../UI/Card\"\r\nimport { useEffect, useState } from \"react\"\r\n\r\nconst DUMMY_MEALS = [\r\n        {\r\n            id: 'm1',\r\n            name: 'Sushi',\r\n            description: 'Finest fish and veggies',\r\n            price: 22.99,\r\n        },\r\n        {\r\n            id: 'm2',\r\n            name: 'Schnitzel',\r\n            description: 'A german specialty!',\r\n            price: 16.5,\r\n        },\r\n        {\r\n            id: 'm3',\r\n            name: 'Barbecue Burger',\r\n            description: 'American, raw, meaty',\r\n            price: 12.99,\r\n        },\r\n        {\r\n            id: 'm4',\r\n            name: 'Green Bowl',\r\n            description: 'Healthy...and green...',\r\n            price: 18.99,\r\n        },\r\n]\r\n\r\nconst AvailableMeal = () => {\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [food, setFood] = useState([]);\r\n    const [httpError, setHttpError] = useState();\r\n\r\n    useEffect(() => {\r\n        const fetchMeal = async() => {\r\n            const response = await fetch('https://foodapp-583ea-default-rtdb.firebaseio.com/meals');\r\n\r\n            if(!response.ok){\r\n                throw new Error('something went wrong');\r\n            };\r\n\r\n            const data = await response.json();\r\n\r\n            const loadMeal = [];\r\n\r\n            for(const key in data) {\r\n                loadMeal.push({\r\n                    id: key,\r\n                    name: data[key].name,\r\n                    description: data[key].description,\r\n                    price: data[key].price\r\n                });\r\n            }\r\n\r\n            setFood(loadMeal);\r\n            setIsLoading(false);\r\n        };\r\n\r\n        try{\r\n            fetchMeal();\r\n        }catch(error){\r\n            setIsLoading(false);\r\n            setHttpError(error.message);\r\n        };\r\n\r\n    }, []);\r\n\r\n    if(isLoading) {\r\n        return <section className={classes.loading}>\r\n            <p>Loading...</p>\r\n        </section>\r\n    }\r\n\r\n    if(error) {\r\n        return <section className={classes.mealError}>\r\n            <p>Error Detected</p>\r\n        </section>\r\n    }\r\n    \r\n    const mealsList = food.map(meal => \r\n        <MealItem\r\n            key={meal.id}\r\n            id={meal.id}\r\n            name={meal.name}\r\n            description={meal.description}\r\n            price={meal.price}\r\n        />\r\n    )\r\n\r\n    return (\r\n        <section className={classes.meals}>\r\n            <Card>\r\n                <ul>{mealsList}</ul>\r\n            </Card>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default AvailableMeal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}